{"version":3,"file":"static/js/494.c7cd747f.chunk.js","mappings":"gRA6EA,EAvEqB,WAAO,IAAD,EACzB,GAA8BA,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACTC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAcC,EAAAA,EAAAA,QAAO,OAE3BC,EAAAA,EAAAA,YAAU,WAAK,IAAD,EAEZF,EAAYG,QAAZ,UAAsBP,EAASQ,aAA/B,aAAsB,EAAgBC,IAEvC,GAAC,KAEFH,EAAAA,EAAAA,YAAU,WACR,IAAMI,EAAS,mCAAG,8GAEKC,EAAAA,EAAAA,IAAiBT,GAFtB,OAERU,EAFQ,OAGdb,EAAWa,GAHG,gDAKdC,QAAQC,MAAM,+BAAd,MALc,yDAAH,qDAQfJ,GAED,GAAE,CAACR,IACNW,QAAQE,IAAKX,GACX,IAAMY,EAASZ,EAAYG,SAAW,IAEtC,OACE,iBAAKU,UAAU,YAAf,WACE,UAAC,KAAD,CAAMC,GAAIF,EAAQC,UAAU,UAA5B,WACE,SAAC,MAAD,IADF,WAGA,iBAAKA,UAAU,SAAf,WACE,gBACEE,IAAKrB,EAAQsB,MACbC,IAAG,0CAAqCvB,EAAQwB,gBAElD,4BACE,wBAAKxB,EAAQsB,SACb,yCAAiBG,KAAKC,MAA6B,GAAvB1B,EAAQ2B,cAApC,QACA,sCACA,uBAAI3B,EAAQ4B,YACZ,qCACA,eAAIT,UAAU,cAAd,mBACGnB,EAAQ6B,cADX,aACG,EAAgBC,KAAI,SAAAC,GAAK,OACxB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADS,aAMhC,gBAAId,UAAU,cAAd,WACE,yBACE,eAAIA,UAAU,aAAd,UACE,SAAC,KAAD,CAAMC,GAAG,OAAT,uBAGJ,yBACE,eAAID,UAAU,aAAd,UACE,SAAC,KAAD,CAAMC,GAAG,UAAT,6BAIN,SAAC,EAAAc,SAAD,CAAUC,UAAU,qCAApB,UACE,SAAC,KAAD,QAMP,C","sources":["pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState, Suspense, useRef } from 'react';\nimport { Link, useLocation, useParams, Outlet } from 'react-router-dom';\nimport { FaArrowLeft } from 'react-icons/fa';\nimport { fetchShowDetails } from '../../services/api-service';\nimport './MovieDetails.css';\n\nconst MovieDetails = () => {\n  const [details, setDetails] = useState({});\n  const location = useLocation();\n  const { movieId } = useParams();\n  const prevPathRef = useRef(null);\n\n  useEffect(()=>{\n    // Store the path of the previous page in useRef\n    prevPathRef.current = location.state?.from;\n     // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchShowDetails(movieId);\n        setDetails(data);\n      } catch (error) {\n        console.error('Error fetching show details:', error);\n      }\n    };\n    fetchData();\n\n  }, [movieId]);\nconsole.log( prevPathRef );\n  const backTo = prevPathRef.current || '/';\n\n  return (\n    <div className=\"container\">\n      <Link to={backTo} className=\"backBtn\">\n        <FaArrowLeft />Back\n      </Link>\n      <div className=\"poster\">\n        <img\n          alt={details.title}\n          src={`https://image.tmdb.org/t/p/w500/${details.poster_path}`}\n        />\n        <div>\n          <h2>{details.title}</h2>\n          <h3>User score: {Math.round(details.vote_average * 10)}%</h3>\n          <h3>Overview</h3>\n          <p>{details.overview}</p>\n          <h3>Genres:</h3>\n          <ul className='movieGenres'>\n            {details.genres?.map(genre => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n      <ul className='detailsMenu'>\n        <li>\n          <h3 className='menuDetail'>\n            <Link to=\"cast\">Cast</Link>\n          </h3>\n        </li>\n        <li>\n          <h3 className='menuDetail'>\n            <Link to=\"reviews\">Reviews</Link>\n          </h3>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n\n\n  );\n};\n\nexport default MovieDetails;"],"names":["useState","details","setDetails","location","useLocation","movieId","useParams","prevPathRef","useRef","useEffect","current","state","from","fetchData","fetchShowDetails","data","console","error","log","backTo","className","to","alt","title","src","poster_path","Math","round","vote_average","overview","genres","map","genre","name","id","Suspense","fallback"],"sourceRoot":""}