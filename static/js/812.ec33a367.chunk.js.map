{"version":3,"file":"static/js/812.ec33a367.chunk.js","mappings":"+PAuCA,EAnCgB,WAEZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACV,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEQC,EAAAA,EAAAA,IAAaP,GAFrB,OAERG,EAFQ,OAGdC,EAAWD,GAHG,gDAMdK,QAAQC,MAAM,+BAAd,MANc,yDAAH,qDAUfH,GACD,GAAE,CAACN,KAEI,8BACLG,EAAQO,OAAS,GAChB,wBACGP,EAAQQ,KAAI,SAACC,GAAD,OACX,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOG,GADL,OAQf,uCAGL,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {fetchReviews} from '../../services/api-service';\n\nconst Reviews = () => {\n\n    const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const reviews = await fetchReviews(movieId);\n        setReviews(reviews);\n        // console.log(reviews);\n      } catch (error) {\n        console.error('Error fetching show details:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (<>\n    {reviews.length > 0 ? (\n      <ul>\n        {reviews.map((review) => (\n          <li key={review.id}>\n            <h4>Author: {review.author}</h4>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <p>No reviews</p>\n    )}\n  </>)\n}\n\nexport default Reviews;"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchData","fetchReviews","console","error","length","map","review","author","content","id"],"sourceRoot":""}