{"version":3,"file":"static/js/950.72335bfc.chunk.js","mappings":"uQA8CA,EA3CkB,SAAC,GAA+B,IAA7BA,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC7B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAkBMC,GAAcF,EACpB,OACE,iCACE,gBAAKG,UAAU,YAAf,UACE,kBAAMA,UAAU,aAAaN,SAfZ,SAACO,GACtBA,EAAMC,iBACFL,IAAUF,GAIVE,GAAuB,UAAdI,EAAME,MACjBT,EAASG,GAJTO,MAAM,6BAAD,OAA8BP,EAA9B,qDAMR,EAMK,WACE,kBACEG,UAAU,mBACVK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,eACZC,MAAOZ,EACPa,SA5BgB,SAACT,GACzB,IAAMU,EAAaV,EAAMW,OAAOH,MAAMI,OACtCf,EAASa,EACV,KA2BO,mBAAQN,KAAK,SAASL,UAAU,oBAAoBc,SAAUf,EAA9D,UACE,iBAAMC,UAAU,0BAAhB,2BAIK,KAAVH,IAAgB,eAAGG,UAAU,QAAb,iDAAwD,kBAAxD,+BAGtB,ECmBD,G,KAvDe,WACb,OAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOmB,EAAP,KAAeC,EAAf,KACA,GAAsCpB,EAAAA,EAAAA,UAAS,IAA/C,eAAOD,EAAP,KAAoBsB,EAApB,KAEMC,GAAWC,EAAAA,EAAAA,MAOXC,EAAW,mCAAG,WAAOzB,GAAP,iGAEK0B,EAAAA,EAAAA,IAAqB1B,GAF1B,OAEVoB,EAFU,OAGhBC,EAAUD,GACVE,EAAetB,GAJC,gDAMhB2B,QAAQC,MAAM,oCAAd,MANgB,yDAAH,sDAgBjB,OANAC,EAAAA,EAAAA,YAAU,WACJ7B,GACFyB,EAAYzB,EAEf,GAAE,CAACA,KAGF,iCACE,SAAC,EAAD,CAAWD,SAxBQ,SAACC,IACtB8B,EAAAA,EAAAA,kBAAgB,WACdL,EAAYzB,EACb,GACF,EAoBwCA,YAAaA,IACjDoB,EAAOW,OAAS,IACf,eAAI1B,UAAU,kBAAd,SACGe,EAAOY,KAAI,SAAAC,GAAK,OACf,SAAC,KAAD,CACEC,GAAI,CAAEC,SAAS,WAAD,OAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMf,IADxD,UAIE,gBAAKlB,UAAU,aAAf,WACE,gBAAKA,UAAU,eACbkC,IAAKN,EAAMO,MACXC,IAAG,0CAAqCR,EAAMS,eAE9CC,MAAM,MACNC,OAAO,SAET,cAAIvC,UAAU,cAAd,SAA6B4B,EAAMO,YAVhCP,EAAMG,GAHE,QAqB1B,E","sources":["components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './SearchBar.css';\n\nconst SearchBar = ({ onSubmit, searchQuery }) => {\n  const [input, setInput] = useState('');\n\n  const handleInputChange = (event) => {\n    const inputValue = event.target.value.trim();\n    setInput(inputValue);\n  };\n\n  const onHandleSubmit = (event) => {\n    event.preventDefault();\n    if (input === searchQuery) {\n      alert(`You have already selected ${input}, you can change your search or continue browsing`);\n      return;\n    }\n    if (input || event.key === 'Enter') {\n      onSubmit(input);\n    }\n  };\n\n  const isDisabled = !input;\n  return (\n    <>\n      <div className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={onHandleSubmit}>\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movie\"\n            value={input}\n            onChange={handleInputChange}\n          />\n          <button type=\"submit\" className=\"SearchForm-button\" disabled={isDisabled}>\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n        </form>\n      </div>\n      {input === '' && <p className=\"Sorry\">Sorry, you need to write something.<br /> Please choose a movie.</p>}\n    </>\n  );\n};\n\nexport default SearchBar;","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { fetchMoviesWithQuery } from '../../services/api-service';\nimport SearchBar from \"components/SearchBar\";\nimport { startTransition } from 'react';\nimport '../Home/Home.css';\n\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const location = useLocation();\n  const onSearchSubmit = (searchQuery) => {\n    startTransition(() => {\n      fetchMovies(searchQuery);\n    });\n  };\n\n  const fetchMovies = async (searchQuery) => {\n    try {\n      const movies = await fetchMoviesWithQuery(searchQuery);\n      setMovies(movies);\n      setSearchQuery(searchQuery);\n    } catch (error) {\n      console.error('Error fetching movies with query:', error);\n    }\n  };\n\n  useEffect(() => {\n    if (searchQuery) {\n      fetchMovies(searchQuery);\n    }\n  }, [searchQuery]);\n\n  return (\n    <>\n      <SearchBar onSubmit={onSearchSubmit} searchQuery={searchQuery} />\n      {movies.length > 0 && (\n        <ul className='trending-movies'>\n          {movies.map(movie => (\n            <Link\n              to={{ pathname: `/movies/${movie.id}`, state: { from: location } }}\n              key={movie.id}\n            >\n              <li  className='movie-item'>\n                <img className='movie-poster'\n                  alt={movie.title}\n                  src={`https://image.tmdb.org/t/p/w500/${movie.backdrop_path}`}\n                  \n                  width=\"120\"\n                  height=\"180\"\n                />\n                <p  className='movie-title'>{movie.title}</p>\n              </li>\n            </Link>\n          ))}\n        </ul>\n      )}\n    </>\n  )\n};\n\nexport default Movies;"],"names":["onSubmit","searchQuery","useState","input","setInput","isDisabled","className","event","preventDefault","key","alert","type","autoComplete","autoFocus","placeholder","value","onChange","inputValue","target","trim","disabled","movies","setMovies","setSearchQuery","location","useLocation","fetchMovies","fetchMoviesWithQuery","console","error","useEffect","startTransition","length","map","movie","to","pathname","id","state","from","alt","title","src","backdrop_path","width","height"],"sourceRoot":""}